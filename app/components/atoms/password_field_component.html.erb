<div class="password-field">
  <!-- Label -->
  <label for="<%= field_id %>" class="<%= label_classes %>">
    <%= label %>
    <% if required %>
      <span class="text-red-500 ml-1" aria-label="required">*</span>
    <% end %>
  </label>

  <!-- Input Container -->
  <div class="relative">
    <!-- Password Input -->
    <%= tag.input(**input_attributes) %>

    <!-- Toggle Visibility Button -->
    <% if show_toggle %>
      <button
        type="button"
        id="<%= toggle_id %>"
        class="<%= toggle_button_classes %>"
        onclick="togglePasswordVisibility('<%= field_id %>', '<%= toggle_id %>')"
        aria-label="Toggle password visibility"
        tabindex="-1"
      >
        <i class="fas fa-eye" data-show-icon></i>
        <i class="fas fa-eye-slash hidden" data-hide-icon></i>
      </button>
    <% end %>
  </div>

  <!-- Error Message -->
  <% if has_error? %>
    <div id="<%= field_id %>_error" class="<%= error_classes %>" role="alert">
      <i class="fas fa-exclamation-circle mr-1" aria-hidden="true"></i>
      <%= error %>
    </div>
  <% end %>

  <!-- Password Strength Indicator -->
  <% if show_strength %>
    <div id="<%= strength_id %>" class="mt-2">
      <div class="text-sm text-gray-600 mb-1">Password strength:</div>
      <div class="flex space-x-1">
        <div class="h-2 flex-1 bg-gray-200 rounded-full">
          <div class="h-full bg-red-500 rounded-full transition-all duration-300" style="width: 0%" data-strength-bar></div>
        </div>
      </div>
      <div class="text-xs text-gray-500 mt-1" data-strength-text>Enter a password</div>
    </div>
  <% end %>

  <!-- Password Requirements -->
  <% if show_requirements %>
    <div id="<%= requirements_id %>" class="mt-2">
      <div class="text-sm text-gray-600 mb-1">Password must contain:</div>
      <ul class="text-xs text-gray-500 space-y-1">
        <% password_requirements.each_with_index do |requirement, index| %>
          <li class="flex items-center" data-requirement="<%= index %>">
            <i class="fas fa-circle text-gray-300 mr-2 text-xs" data-requirement-icon></i>
            <%= requirement %>
          </li>
        <% end %>
      </ul>
    </div>
  <% end %>
</div>

<% if show_toggle || show_strength %>
  <script>
    // Password visibility toggle
    function togglePasswordVisibility(fieldId, toggleId) {
      const field = document.getElementById(fieldId);
      const toggle = document.getElementById(toggleId);
      const showIcon = toggle.querySelector('[data-show-icon]');
      const hideIcon = toggle.querySelector('[data-hide-icon]');
      
      if (field.type === 'password') {
        field.type = 'text';
        showIcon.classList.add('hidden');
        hideIcon.classList.remove('hidden');
      } else {
        field.type = 'password';
        showIcon.classList.remove('hidden');
        hideIcon.classList.add('hidden');
      }
    }

    <% if show_strength %>
    // Password strength checker
    document.addEventListener('DOMContentLoaded', function() {
      const field = document.getElementById('<%= field_id %>');
      const strengthBar = document.querySelector('[data-strength-bar]');
      const strengthText = document.querySelector('[data-strength-text]');
      const requirements = document.querySelectorAll('[data-requirement]');
      
      if (field && strengthBar && strengthText) {
        field.addEventListener('input', function() {
          const password = field.value;
          const strength = calculatePasswordStrength(password);
          updateStrengthIndicator(strength, strengthBar, strengthText);
          updateRequirements(password, requirements);
        });
      }
    });

    function calculatePasswordStrength(password) {
      let score = 0;
      if (password.length >= 8) score += 25;
      if (/[a-z]/.test(password)) score += 25;
      if (/[A-Z]/.test(password)) score += 25;
      if (/[0-9]/.test(password)) score += 25;
      return score;
    }

    function updateStrengthIndicator(strength, bar, text) {
      bar.style.width = strength + '%';
      
      if (strength === 0) {
        bar.className = bar.className.replace(/bg-\w+-\d+/, 'bg-gray-300');
        text.textContent = 'Enter a password';
      } else if (strength < 50) {
        bar.className = bar.className.replace(/bg-\w+-\d+/, 'bg-red-500');
        text.textContent = 'Weak';
      } else if (strength < 75) {
        bar.className = bar.className.replace(/bg-\w+-\d+/, 'bg-yellow-500');
        text.textContent = 'Fair';
      } else if (strength < 100) {
        bar.className = bar.className.replace(/bg-\w+-\d+/, 'bg-blue-500');
        text.textContent = 'Good';
      } else {
        bar.className = bar.className.replace(/bg-\w+-\d+/, 'bg-green-500');
        text.textContent = 'Strong';
      }
    }

    function updateRequirements(password, requirements) {
      const checks = [
        password.length >= 8,
        /[A-Z]/.test(password),
        /[a-z]/.test(password),
        /[0-9]/.test(password)
      ];
      
      requirements.forEach((req, index) => {
        const icon = req.querySelector('[data-requirement-icon]');
        if (checks[index]) {
          icon.className = 'fas fa-check-circle text-green-500 mr-2 text-xs';
        } else {
          icon.className = 'fas fa-circle text-gray-300 mr-2 text-xs';
        }
      });
    }
    <% end %>
  </script>
<% end %>
